// AUTOGENERATED, DO NOT EDIT. See CONTRIBUTING.md for instructions.
/*********************************************************************
* Filename:   sha256.h
* Author:     Brad Conte (brad AT bradconte.com)
* Copyright:
* Disclaimer: This code is presented "as is" without any guarantees.
* Details:    Defines the API for the corresponding SHA1 implementation.
*********************************************************************/

#ifndef SHA256_H
#define SHA256_H

/*************************** HEADER FILES ***************************/
#include <stdint.h>
#include <stddef.h>
#include <cstring>

/****************************** MACROS ******************************/
#define SHA256_BLOCK_SIZE 32            // SHA256 outputs a 32 byte digest

/**************************** DATA TYPES ****************************/
//#include <windows.h>
//typedef unsigned char uint8_t;             // 8-bit byte
//typedef unsigned int  uint32_t;             // 32-bit word, change to "long" for 16-bit machines

class Sha256 {
    public:
	Sha256();
	void update(const uint8_t data[], size_t len);
	void final(uint8_t hash[]);
    private:
	uint8_t data[64];
	uint32_t datalen;
	unsigned long long bitlen;
	uint32_t state[8];
	void transform();
};

#endif   // SHA256_H
